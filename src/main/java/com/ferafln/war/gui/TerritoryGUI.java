/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * teste.java
 *
 * Created on 8-Jan-2018, 8:19:31 PM
 */
package com.ferafln.war.gui;

import com.ferafln.war.Player;
import com.ferafln.war.exception.WarException;
import com.ferafln.war.gui.util.PropFilesGUIEnum;
import com.ferafln.war.territorio.Territory;
import com.ferafln.war.territorio.util.Observer;
import com.ferafln.war.territorio.util.Props;
import com.ferafln.war.territorio.util.StepRoundEnum;
import java.awt.event.MouseEvent;
import java.util.List;
import java.util.Properties;
import javax.swing.SwingUtilities;

/**
 *
 * @author feraf
 */
public class TerritoryGUI extends javax.swing.JPanel {

//    private final String propPosition = System.getProperty("user.dir") + File.separator + "properties" + File.separator + "territorysPosition.properties";
    private Territory territory;
    private Observer observer;

    /** Creates new form teste */
    public TerritoryGUI(Territory territory) {
        this.territory = territory;
        initComponents();
        setTerritory(territory);
        setBounds(0, 501, 70, 80);
        getTerritoryLocation();
    }

    private void setTerritory(Territory territory) {
        lblQtdTroops.setText("" + territory.getAmountTroops());
        lblImage.setIcon(territory.getPlayer().getTroop().getImagem());
    }

    public void setObserver(Observer obj) {
        this.observer = obj;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblImage = new javax.swing.JLabel();
        lblQtdTroops = new javax.swing.JLabel();

        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(70, 80));
        setLayout(null);

        lblImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImage.setIcon(new javax.swing.ImageIcon("C:\\Users\\feraf\\Desktop\\exercito.jpg")); // NOI18N
        lblImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblImageMouseClicked(evt);
            }
        });
        add(lblImage);
        lblImage.setBounds(0, 0, 13, 13);

        lblQtdTroops.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lblQtdTroops.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        add(lblQtdTroops);
        lblQtdTroops.setBounds(20, 0, 40, 20);
    }// </editor-fold>//GEN-END:initComponents

private void lblImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImageMouseClicked
//    Territory result = teste();
    if (isDistExtraTroops()) {
        actionDistTroops(evt);
    } else if (this.territory.isAttacker()) {
        actionAttack(evt);
    } else if (this.territory.isDefender()) {
        actionDefence(evt);
    }
}//GEN-LAST:event_lblImageMouseClicked
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblQtdTroops;
    // End of variables declaration//GEN-END:variables

    private void actionAttack(MouseEvent evt) {
        Player p = this.territory.getPlayer();
        try {
            if (SwingUtilities.isLeftMouseButton(evt)) {
                p.setAttackTerritory(territory);
            } else if (SwingUtilities.isRightMouseButton(evt)) {
                p.cleanAttack();
            }
            this.observer.update();
        } catch (WarException ex) {
            //TODO: TREAT THIS EXCEPTION
        }
    }

    private void actionDefence(MouseEvent evt) {
        Player p = findAttacker();
        try {
            if (SwingUtilities.isLeftMouseButton(evt)) {
                p.setDefendTerritory(territory);
            } else if (SwingUtilities.isRightMouseButton(evt)) {
                p.cleanAttack();
            }
            this.observer.update();
        } catch (WarException ex) {
            //TODO: TREAT THIS EXCEPTION
        }
    }

    private Player findAttacker() {
        for (Territory t : territory.getVizinhos()) {
            if (StepRoundEnum.ATTACK.equals(t.getPlayer().getStepRoundEnum())
                    && (t.getPlayer().getAttackTerritory() == null || t.getPlayer().getAttackTerritory().equals(t))) {
                return t.getPlayer();//.setDefendTerritory(territory);
            }
        }
        return null;
    }

    private void actionDistTroops(MouseEvent evt) {
        Player p = this.territory.getPlayer();
        if (SwingUtilities.isLeftMouseButton(evt)) {
            if (p.removeExtraTroops()) {
                this.territory.addTroops();
                this.lblQtdTroops.setText("" + this.territory.getAmountTroops());
                this.observer.update();
            }
        } else if (SwingUtilities.isRightMouseButton(evt)) {
            if (this.territory.removeTroop()) {
                this.territory.getPlayer().addExtraTroops();
                this.lblQtdTroops.setText("" + this.territory.getAmountTroops());
                this.observer.update();
            }
        }
    }

    private void getTerritoryLocation() {
        //TODO developer this method;
        Properties p = Props.getProperties(PropFilesGUIEnum.TERRITORYS_POSITION.getPath());
        String[] values = p.getProperty("" + territory.getId()).split(",");
        int x = Integer.parseInt(values[1]);
        int y = Integer.parseInt(values[0]);
        int mult = 1;
        setLocation(x * mult, y * mult);
    }

    private boolean isDistExtraTroops() {
        Player p = this.territory.getPlayer();
        return StepRoundEnum.DISTR_EXTRA_TROOPS.equals(p.getStepRoundEnum())
                || StepRoundEnum.FIRST_STEP.equals(p.getStepRoundEnum());
    }
}
